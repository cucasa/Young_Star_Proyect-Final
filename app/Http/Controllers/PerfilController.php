<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\User;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;

class PerfilController extends Controller
{
    // âœ… Mostrar el perfil del usuario autenticado
    public function mostrarPerfil()
    {
        return view('perfil', ['user' => Auth::user()]);
    }

    // âœ… Cerrar sesiÃ³n del usuario
    public function cerrarSesion(Request $request)
    {
        Auth::logout();
        $request->session()->invalidate();
        return redirect('/youngstar')->with('success', 'SesiÃ³n cerrada correctamente.');
    }



    // âœ… Eliminar la cuenta del usuario autenticado
public function eliminar()
{
    if (!Auth::check()) {
        return redirect('/')->with('error', 'Debes iniciar sesiÃ³n.');
    }

    try {
        $usuario = User::where('id', Auth::id())->first();
        Auth::logout(); // âœ… Cierra la sesiÃ³n antes de eliminar el usuario
        session()->flush(); // ðŸ”¥ VacÃ­a la sesiÃ³n para evitar que Laravel redirija al login

        if ($usuario) {
            $usuario->delete(); // âœ… EliminaciÃ³n segura
        }

        return redirect('/youngstar')->with('success', 'Cuenta eliminada correctamente.'); // ðŸ”„ Redirige al inicio
    } catch (\Exception $e) {
        return redirect()->back()->with('error', 'Error al eliminar la cuenta.');
    }
}





// âœ… Actualizar solo el nombre
public function actualizarNombre(Request $request)
{
    if (!Auth::check()) {
        return redirect('/')->with('error', 'Debes iniciar sesiÃ³n.');
    }

    $request->validate([
        'name' => 'required|string|max:255',
    ]);

    User::where('id', Auth::id())->update(['name' => $request->name]);

    return redirect()->back()->with('success', 'Nombre actualizado correctamente.');
}

// âœ… Actualizar solo el correo electrÃ³nico
public function actualizarEmail(Request $request)
{
    if (!Auth::check()) {
        return redirect('/')->with('error', 'Debes iniciar sesiÃ³n.');
    }

    $request->validate([
        'email' => 'required|email|unique:users,email,' . Auth::id(),
    ]);

    User::where('id', Auth::id())->update(['email' => $request->email]);

    return redirect()->back()->with('success', 'Correo electrÃ³nico actualizado correctamente.');
}

// âœ… Actualizar solo la contraseÃ±a
public function actualizarPassword(Request $request)
{
    if (!Auth::check()) {
        return redirect('/')->with('error', 'Debes iniciar sesiÃ³n.');
    }

    $request->validate([
        'password' => 'required|min:8',
    ]);

    User::where('id', Auth::id())->update(['password' => Hash::make($request->password)]);

    return redirect()->back()->with('success', 'ContraseÃ±a actualizada correctamente.');
}







public function actualizarCompleto(Request $request)
{
    if (!Auth::check()) {
        return redirect('/')->with('error', 'Debes iniciar sesiÃ³n.');
    }

    $request->validate([
        'name' => 'required|string|max:255', // âœ… Cambiado de 'nombre' a 'name'
        'email' => 'required|email|unique:users,email,' . Auth::id(),
        'password' => 'required|min:8',
    ]);

    User::where('id', Auth::id())->update([
        'name' => $request->name, // âœ… Cambiado de 'nombre' a 'name'
        'email' => $request->email,
        'password' => Hash::make($request->password),
    ]);

    return redirect()->back()->with('success', 'Perfil actualizado completamente.');
}





}
